package es.iesjandula.statsbomb.models.lineups;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.MapsId;
import jakarta.persistence.Table;

/**
 *
 * @author Manuel Martin Murillo
 * @author Alejandro Aljarilla
 *
 */
@Entity
@Table(name = "cards")
public class Cards
{
	/**
	 * Id autogenerated
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	/**
	 * Attribute The time when the card was given to the player
	 */
	@Column(length = 5)
	private String time;
	/**
	 * Attribute The type of the card
	 */
	@Column(length = 10)
	private String card_type;
	/**
	 * Attribute The reason of the card
	 */
	@Column(length = 25)
	private String reason;
	
	/**
	 * Attribute The period of the match that the card was given
	 */
	@Column(length = 2)
	private Integer period;
	
	@ManyToOne
	private Lineup lineups;

	/**
	 * Default contructor
	 */
	public Cards()
	{

	}

	/**
	 *
	 * @return the time when the card was given to the player
	 */
	public String getTime()
	{
		return time;
	}

	/**
	 *
	 * @param time, with the time when the card was given to the player
	 */
	public void setTime(String time)
	{
		this.time = time;
	}

	/**
	 *
	 * @return the type of the card
	 */
	public String getCard_type()
	{
		return card_type;
	}

	/**
	 *
	 * @param card_type, with the type of the card
	 */
	public void setCard_type(String card_type)
	{
		this.card_type = card_type;
	}

	/**
	 *
	 * @return the reason of the card
	 */
	public String getReason()
	{
		return reason;
	}

	/**
	 *
	 * @param reason, with the reason of the card
	 */
	public void setReason(String reason)
	{
		this.reason = reason;
	}

	/**
	 *
	 * @return the period of the match that the card was given
	 */
	public Integer getPeriod()
	{
		return period;
	}

	/**
	 *
	 * @param period, with the period of the match that the card was given
	 */
	public void setPeriod(Integer period)
	{
		this.period = period;
	}
	
	public Long getId()
	{
		return id;
	}

	public void setId(Long id)
	{
		this.id = id;
	}

	public Lineup getLineups()
	{
		return lineups;
	}

	public void setLineups(Lineup lineups)
	{
		this.lineups = lineups;
	}

	@Override
	public String toString()
	{
		return "Cards [id=" + id + ", time=" + time + ", card_type=" + card_type + ", reason=" + reason + ", period="
				+ period + ", lineups=" + lineups + "]";
	}
}
